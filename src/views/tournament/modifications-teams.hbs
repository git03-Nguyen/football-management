{{> tournament-header}}
<div class="bg-white-color">
  <div class="row mx-5 px-5 pt-3">

    <div class="d-flex" id="sub-sub-navigation" class="mb-3">
      {{#ifEquals subSubNavigation 0}}
      <a class="h6 fw-bold active">Cấu hình</a>
      {{else}}
      <a href="/tournament/modifications" class="h6 fw-bold text-decoration-none">Cấu hình</a>
      {{/ifEquals}}

      {{#ifEquals subSubNavigation 1}}
      <a class="h6 fw-bold ms-3 active">Đội bóng</a>
      {{else}}
      <a href="/tournament/modifications/teams" class="h6 fw-bold ms-3 text-decoration-none">Đội bóng</a>
      {{/ifEquals}}

      {{#ifEquals subSubNavigation 2}}
      <a class="h6 fw-bold ms-3 active">Lịch đấu</a>
      {{else}}
      <a href="/tournament/modifications/matches" class="h6 fw-bold ms-3 text-decoration-none">Lịch đấu</a>
      {{/ifEquals}}

    </div>

    <div class="mb-1 mt-2 text-muted">
      {{!-- Hiển thị <input>10</input> bản ghi trên một trang --}}
      Hiển thị tổng số <strong>{{teams.length}}</strong> bản ghi.

    </div>

    <div class="table-responsive mt-3" id="table-teams">
      <table class="table">
        <thead class="table-light">
          <tr>
            <th scope="col">#</th>
            <th scope="col"></th>
            <th scope="col" class="text-start">Tên đội</th>
            <th scope="col">Trạng thái</th>
            <th scope="col">Tên liên hệ</th>
            <th scope="col">Số điện thoại</th>
            <th scope="col">Email</th>
            <th scope="col">Hồ sơ</th>
            <th scope="col">Thao tác</th>
          </tr>
        </thead>
        <tbody>

          {{#each teams}}
          <tr>
            <th scope="row">{{sum @index 1}}</th>
            <td>
              <img src="/img/teams/{{this.id}}/logo.png" alt="team-logo" height="40px" width="40px"
                class="rounded-circle">
            </td>
            <td class="text-start">
              <a href="/teams/{{this.id}}">{{this.name}}</a>
            </td>
            {{#if this.status}}
            <td>
              <span class="badge bg-success">Đã duyệt</span>
            </td>
            {{else}}
            <td>
              <span class="badge bg-warning">Chưa duyệt</span>
            </td>
            {{/if}}
            <td>{{this.contactName}}</td>
            <td>{{this.contactPhone}}</td>
            <td>{{this.contactEmail}}</td>
            <td>
              {{!-- Button download --}}
              <a href="{{this.profile}}" target="_blank">
                <button class="btn btn-outline-dark">
                  <i class="fas fa-download"></i>
                </button>
              </a>
            </td>
            <td>
              <div class="d-flex align-items-center justify-content-center">
                <button data-accept="{{this.id}}" class="btn btn-outline-success btn-accept" {{#if
                  this.status}}disabled{{/if}}>
                  <i class="fas fa-check"></i>
                </button>
                <button data-reject="{{this.id}}" class="btn btn-outline-danger ms-2 btn-reject" {{#unless
                  this.status}}disabled{{/unless}}>
                  <i class="fas fa-times"></i>
                </button>
              </div>
            </td>
          </tr>
          {{/each}}

        </tbody>
      </table>
    </div>

  </div>
</div>

<script>
  const acceptButtons = document.querySelectorAll('.btn-accept');
  const rejectButtons = document.querySelectorAll('.btn-reject');
  const nOfTeams = document.getElementById('nOfTeams');

  acceptButtons.forEach(button => {
    button.addEventListener('click', async () => {
      const teamId = button.dataset.accept;
      const response = await fetch(`/tournament/modifications/teams/${teamId}/accept`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        }
      });
      const result = await response.json();
      if (result.status == 'success') {
        button.disabled = true;
        button.nextElementSibling.disabled = false;
        button.parentElement.parentElement.previousElementSibling.previousElementSibling.previousElementSibling.previousElementSibling.previousElementSibling
          .innerHTML = '<span class="badge bg-success">Đã duyệt</span>';
        const activeTeams = parseInt(nOfTeams.innerHTML.split('/')[0]);
        nOfTeams.innerHTML = `${activeTeams + 1}/{{tournament.maxTeams}}`;
      }
    });
  });

  rejectButtons.forEach(button => {
    button.addEventListener('click', async () => {
      const teamId = button.dataset.reject;
      const response = await fetch(`/tournament/modifications/teams/${teamId}/reject`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        }
      });
      const result = await response.json();
      if (result.status == 'success') {
        button.disabled = true;
        button.previousElementSibling.disabled = false;
        button.parentElement.parentElement.previousElementSibling.previousElementSibling.previousElementSibling.previousElementSibling.previousElementSibling
          .innerHTML = '<span class="badge bg-warning">Chưa duyệt</span>';
        const activeTeams = parseInt(nOfTeams.innerHTML.split('/')[0]);
        nOfTeams.innerHTML = `${activeTeams - 1}/{{tournament.maxTeams}}`;
      }
    });
  });

</script>