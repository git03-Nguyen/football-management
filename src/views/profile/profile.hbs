{{#section 'style'}}
<link rel="stylesheet" href="/css/pages/profile.css">
{{/section}}


{{!-- Form --}}
<div id="profile" class="h-25 bg-white px-4 py-4 rounded shadow my-5">
  <div class="d-flex align-items-center fw-bold text-primary-color">
    <i class="fas fa-user h4 m-0 me-2"></i>
    <p class="m-0 h4">Thông tin tài khoản</p>
  </div>
  <div>
    <!--enctype="multipart/form-data" -->
    <form action="/profile/edit" method="POST" class="row m-0 pt-4" id="profile-form">

      <div class="col-5 text-center">
        <div class="d-flex justify-content-center">
          <div class="position-relative" style="width: fit-content;">
            <img src="/img/avatars/{{user.avatar}}" alt="" height="100px" width="100px"
              class="rounded-circle object-fit-cover">
            <div class="position-absolute bottom-0 end-0">
              <label for="avatar" class="btn btn-light border border-3 border-light p-2 m-0"><i
                  class="fas fa-camera"></i></label>
              {{!-- Input image png, jpg --}}
              <input type="file" name="avatar" id="avatar" class="d-none" accept="image/png, image/jpeg">
            </div>
          </div>
        </div>
        <p class="h6 fw-bold mt-3">{{user.email}}</p>
        <a href="/profile/change-password">Đổi mật khẩu</a>
      </div>

      <div class="col-7">

        <div class="d-flex justify-content-center align-items-center">
          <p class="m-0 text-end me-3 text-nowrap" style="width: 7rem !important;">Họ tên <span
              class="text-danger">(*)</span></p>
          <input type="text" class="form-control bg-light text-muted" name="fullname" id="fullname"
            value="{{user.fullname}}" required>
        </div>
        <div class="d-flex justify-content-center align-items-center mt-3">
          <p class="m-0 text-end me-3 text-nowrap" style="width: 7rem !important;">Ngày sinh</p>
          {{#if user.birthday}}
          <input type="date" class="form-control bg-light text-muted" name="birthday" id="birthday"
            value="{{user.birthday.yyyy}}-{{user.birthday.mm}}-{{user.birthday.dd}}">
          {{else}}
          <input type="date" class="form-control bg-light text-muted" name="birthday" id="birthday">
          {{/if}}
        </div>
        <div class="d-flex justify-content-center align-items-center mt-3">
          <p class="m-0 text-end me-3 text-nowrap" style="width: 7rem !important;">Điện thoại</p>
          <input type="number" class="form-control bg-light text-muted" name="phone" id="phone" value="{{user.phone}}">
        </div>
        <div class="d-flex justify-content-center align-items-start mt-3">
          <p class="m-0 text-end me-3 text-nowrap" style="width: 7rem !important;">Giới thiệu</p>
          {{!-- Multiline input --}}
          <textarea class="form-control bg-light text-muted" name="introduction" id="introduction"
            rows="3">{{user.introduction}}</textarea>
        </div>
        <div class="d-flex justify-content-center align-items-start mt-3">
          <div style="width: 7rem !important;"></div>
          <div class="text-center">
            <button class="btn btn-primary" type="submit" id="btn-submit">Lưu</button>
          </div>
        </div>
      </div>
    </form>
  </div>
</div>

<script>
  const profileForm = document.getElementById('profile-form');
  const avatar = document.getElementById('avatar');
  const avatarImg = document.querySelector('#profile img');
  avatar.addEventListener('change', () => {
    const file = avatar.files[0];
    const reader = new FileReader();
    reader.onload = () => {
      avatarImg.src = reader.result;
    }
    reader.readAsDataURL(file);
  })
</script>

<!-- Toast message -->
<div id="toastMessage" class="toast align-items-center text-white bg-success border-0 position-absolute" role="alert"
  aria-live="assertive" aria-atomic="true">
  <div class="d-flex">
    <div class="toast-body">
      Hello, world! This is a toast message.
    </div>
    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"
      aria-label="Close"></button>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {

    let toast = document.getElementById('toastMessage');
    toast.style.bottom = '130px';
    toast.style.right = '10px';

    const profileForm = document.querySelector('#profile-form');
    profileForm.onsubmit = validate;

    function showToast(status, message) {
      if (toast) {
        toast.classList.remove('bg-success', 'bg-danger', 'show');
      } else {
        toast = document.getElementById('toastMessage');
      }

      toast.querySelector('.toast-body').innerHTML = message;

      if (status == 'success') {
        toast.classList.add('bg-success', 'show');
      } else if (status == 'error') {
        toast.classList.add('bg-danger', 'show');
      }

      setTimeout(() => {
        toast.classList.remove('show');
      }, 2000);
    }

    function validate(event) {
      event.preventDefault();

      const fullname = document.getElementById('fullname').value;
      const birthday = document.getElementById('birthday').value;
      const phone = document.getElementById('phone').value;
      const introduction = document.getElementById('introduction').value;

      if (fullname.length == 0) {
        showToast('error', 'Họ tên không được để trống');
        return false;
      } else if (fullname.length > 50) {
        showToast('error', 'Họ tên không được quá 50 ký tự');
        return false;
      }

      if (birthday.length > 0) {
        const birthdayDate = new Date(birthday);
        const today = new Date();
        if (birthdayDate > today) {
          showToast('error', 'Ngày sinh không hợp lệ');
          return false;
        }
      }

      if (phone.length > 0) {
        const regex = /^\d{10}$/;
        if (phone.length != 10 || !regex.test(phone)) {
          showToast('error', 'Số điện thoại không hợp lệ');
          return false;
        }
      }

      if (introduction.length > 300) {
        showToast('error', 'Giới thiệu không được quá 300 ký tự');
        return false;
      }

      const avatar = document.getElementById('avatar');
      if (avatar.files.length > 0) {
        const avatarFile = avatar.files[0];
        const avatarFileSize = avatarFile.size / 1024 / 1024; // MB
        const avatarFileType = avatarFile.type;
        const avatarFileName = avatarFile.name;

        if (avatarFileSize > 10) {
          showToast('error', 'Kích thước ảnh không được quá 10MB');
          return false;
        }

        if (avatarFileType != 'image/png' && avatarFileType != 'image/jpeg') {
          showToast('error', 'Ảnh phải có định dạng png hoặc jpg');
          return false;
        }

        if (avatarFileName.length > 100) {
          showToast('error', 'Tên ảnh không được quá 100 ký tự');
          return false;
        }
      }

      const data = {
        fullname,
        birthday,
        phone,
        introduction
      }

      const formData = new FormData();
      formData.append('data', JSON.stringify(data));
      formData.append('avatar', document.getElementById('avatar').files[0]);

      fetch('/profile/edit', {
        method: 'POST',
        body: formData
      })
        .then(response => response.json())
        .then(data => {
          if (data.status == 'success') {
            showToast('success', data.message);
          } else if (data.status == 'error') {
            showToast('error', data.message);
          }
        })
        .catch((error) => {
          console.error('Error:', error);
        });
    }
  });
</script>